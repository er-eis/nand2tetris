// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=register1Load, b=register2Load, c=register3Load, d=register4Load, e=register5Load, f=register6Load, g=register7Load, h=register8Load);
	Register(in=in, load=register1Load, out=firstRegister);
    Register(in=in, load=register2Load, out=secondRegister);
	Register(in=in, load=register3Load, out=thirdRegister);
	Register(in=in, load=register4Load, out=fourthRegister);
	Register(in=in, load=register5Load, out=fifthRegister);
	Register(in=in, load=register6Load, out=sixthRegister);
	Register(in=in, load=register7Load, out=seventhRegister);
	Register(in=in, load=register8Load, out=eighthRegister);
	Mux8Way16(sel=address, a=firstRegister, b=secondRegister, c=thirdRegister, d=fourthRegister, e=fifthRegister, f=sixthRegister, g=seventhRegister, h=eighthRegister, out=out);
	
}