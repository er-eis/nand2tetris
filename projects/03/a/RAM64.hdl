// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[3..5], a=RAM1Load, b=RAM2Load, c=RAM3Load, d=RAM4Load, e=RAM5Load, f=RAM6Load, g=RAM7Load, h=RAM8Load);
    RAM8(in=in, load=RAM1Load, address=address[0..2], out=firstRAM);
	RAM8(in=in, load=RAM2Load, address=address[0..2], out=secondRAM);
	RAM8(in=in, load=RAM3Load, address=address[0..2], out=thirdRAM);
	RAM8(in=in, load=RAM4Load, address=address[0..2], out=fourthRAM);
	RAM8(in=in, load=RAM5Load, address=address[0..2], out=fifthRAM);
	RAM8(in=in, load=RAM6Load, address=address[0..2], out=sixthRAM);
	RAM8(in=in, load=RAM7Load, address=address[0..2], out=seventhRAM);
	RAM8(in=in, load=RAM8Load, address=address[0..2], out=eighthRAM);
	Mux8Way16(sel=address[3..5], a=firstRAM, b=secondRAM, c=thirdRAM, d=fourthRAM, e=fifthRAM, f=sixthRAM, g=seventhRAM, h=eighthRAM, out=out);
}