// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	
	Inc16(in=registerValue, out=incRegister);
	
	Not(in=reset, out=notReset);
	
	//inc, expected sel bit result: if inc == 1 => 10
	Xor(a=inc, b=true, out=selBit1Inc);
	
	//load, expected sel bit result: if load == 1 => 01
	Xor(a=load, b=true, out=selBit2Load);
	Or(a=load, b=selBit1Inc, out=selBit1Load);
	
	//resets, expected sel bit result if reset == 1 => 00
	And(a=notReset, b=selBit1Load, out=selBit1);
	And(a=notReset, b=selBit2Load, out=selBit2);
	
	Mux4Way16(a=false, b=in, c=incRegister, d=registerValue, sel[0]=selBit1, sel[1]=selBit2, out=registerIn);
	Register(in=registerIn, load=true, out=registerValue, out=out);
}
